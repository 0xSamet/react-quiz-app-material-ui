{"ast":null,"code":"var _jsxFileName = \"/Users/samet/dev/cv/react-quiz-app-ui/src/pages/CreateQuiz.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport produce from \"immer\";\nimport { changeMenuIndex, changeTitle } from \"../store/menu\";\nimport { createQuiz, createFailure, createSuccess } from \"../store/quiz\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  quizDescriptionWrapper: {\n    marginBottom: theme.spacing(2)\n  },\n  quizDescription: {\n    marginBottom: theme.spacing(1)\n  },\n  questionWrapper: {},\n  question: {\n    marginBottom: theme.spacing(2)\n  },\n  choiceWrapper: {},\n  choice: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(1)\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  button: {\n    marginBottom: theme.spacing(1)\n  },\n  pageButtonWrapper: {\n    marginBottom: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n}));\n\nconst CreateQuiz = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n  const requestErrorMessage = useSelector(state => state.quizzes.errorMessage);\n  const requestSuccessMessage = useSelector(state => state.quizzes.successMessage);\n  const questionDefault = {\n    description: \"\",\n    descriptionErrorMessage: \"\",\n    answers: [{\n      index: 0,\n      description: \"\",\n      errorMessage: \"\"\n    }],\n    answerIndex: 0\n  };\n  const quizDefault = {\n    description: \"\",\n    questions: [questionDefault]\n  };\n  const statusDefault = {\n    isQuizNameSubmitted: false,\n    step: 0,\n    choiceNumber: 0,\n    page: 0\n  };\n  const [quiz, setQuiz] = useState(quizDefault);\n  const [status, setStatus] = useState(statusDefault);\n\n  const handleQuizDescriptionInput = e => {\n    setQuiz({ ...quiz,\n      description: e.target.value\n    });\n  };\n\n  const handleAnswerInput = (index, value) => {\n    setQuiz(produce(quiz, draft => {\n      draft.questions[status.page].answers[index].description = value;\n      draft.questions[status.page].descriptionErrorMessage = \"\";\n    }));\n  };\n\n  const submitQuizDescription = () => {\n    setStatus({ ...status,\n      isQuizNameSubmitted: true,\n      step: status.step + 1\n    });\n  };\n\n  const addChoice = () => {\n    setQuiz(produce(quiz, draft => {\n      draft.questions[status.page].answers.push({\n        index: draft.questions[status.page].answers.slice(-1)[0].index + 1,\n        description: \"\",\n        errorMessage: \"\"\n      });\n    }));\n  };\n\n  const deleteChoice = index => {\n    setQuiz(produce(quiz, draft => {\n      const indexOfChoice = draft.questions[status.page].answers.findIndex(answer => {\n        return answer.index === index;\n      });\n\n      if (index === quiz.questions[status.page].answerIndex) {\n        draft.questions[status.page].answerIndex = indexOfChoice - 1;\n      }\n\n      draft.questions[status.page].answers.splice(indexOfChoice, 1);\n    }));\n  };\n\n  const addQuestion = () => {\n    setQuiz(produce(quiz, draft => {\n      draft.questions.push(questionDefault);\n    }));\n    setStatus(produce(status, draft => {\n      draft.page = quiz.questions.length;\n    }));\n  };\n\n  const submitQuiz = () => {\n    dispatch(createQuiz(produce(quiz, draft => {\n      draft.questions.forEach(question => {\n        delete question.descriptionErrorMessage;\n        question.answers.forEach(answer => {\n          delete answer.errorMessage;\n        });\n      });\n    })));\n  };\n\n  const deleteQuestion = index => {\n    index === 0 ? setStatus({ ...status,\n      page: 0\n    }) : setStatus({ ...status,\n      page: index - 1\n    });\n    setQuiz(produce(quiz, draft => {\n      draft.questions.splice(index, 1);\n    }));\n  };\n\n  useEffect(() => {\n    dispatch(changeMenuIndex(5));\n    dispatch(changeTitle(\"Soru Oluştur\")); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return isAuthenticated ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, status.step === 0 ? /*#__PURE__*/React.createElement(Paper, {\n    elevation: 0,\n    className: classes.quizDescriptionWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: status.isQuizNameSubmitted,\n    value: quiz.description,\n    onChange: handleQuizDescriptionInput,\n    label: \"Testine Bir A\\xE7\\u0131klama Belirle !\",\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.quizDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.formElement,\n    fullWidth: true,\n    disabled: quiz.description === \"\" || status.isQuizNameSubmitted,\n    onClick: submitQuizDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, quiz.description === \"\" ? \"Test Açıklamasını Giriniz\" : \"İlerleyelim ->\")) : null, status.step === 1 ? /*#__PURE__*/React.createElement(Paper, {\n    elevation: 0,\n    className: classes.questionWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.pageButtonWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    count: quiz.questions.length === 0 ? 1 : quiz.questions.length,\n    page: status.page + 1,\n    onChange: (e, pageToGo) => {\n      setStatus(produce(status, draft => {\n        draft.page = pageToGo - 1;\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.question,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: quiz.questions[status.page].descriptionErrorMessage !== \"\",\n    helperText: quiz.questions[status.page].descriptionErrorMessage,\n    label: \"Soru\",\n    variant: \"filled\",\n    fullWidth: true,\n    value: quiz.questions[status.page].description,\n    onChange: e => setQuiz(produce(quiz, draft => {\n      draft.questions[status.page].description = e.target.value;\n      draft.questions[status.page].descriptionErrorMessage = \"\";\n      draft.questions[status.page].answers.forEach(answer => answer.errorMessage = \"\");\n    })),\n    multiline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.choiceWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, quiz.questions[status.page].answers.map((answer, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.choice,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Radio, {\n    checked: answer.index === quiz.questions[status.page].answerIndex,\n    onChange: () => setQuiz(produce(quiz, draft => {\n      draft.questions[status.page].answerIndex = answer.index;\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        disabled: answer.index === 0,\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => deleteChoice(answer.index),\n        onMouseDown: e => e.preventDefault(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(DeleteIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 29\n        }\n      })))\n    },\n    variant: \"outlined\",\n    error: answer.errorMessage !== \"\",\n    helperText: answer.errorMessage,\n    value: answer.description,\n    onChange: ({\n      target: {\n        value\n      }\n    }) => handleAnswerInput(answer.index, value),\n    multiline: true,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: addChoice,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  }, \"Yeni \\u015E\\u0131k Ekle\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: addQuestion,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }\n  }, \"Ba\\u015Fka Soru Ekle\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => deleteQuestion(status.page),\n    className: classes.button,\n    disabled: quiz.questions.length < 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }, \"Soruyu Sil\"), /*#__PURE__*/React.createElement(Button, {\n    disabled: !quiz.questions.length > 0,\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: submitQuiz,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 17\n    }\n  }, \"Testi Bitir\")))) : null), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    open: requestErrorMessage !== \"\",\n    onClose: () => dispatch(createFailure(\"\")),\n    autoHideDuration: 1000,\n    disableWindowBlurListener: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"filled\",\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }\n  }, requestErrorMessage)), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    open: requestSuccessMessage !== \"\",\n    onClose: () => dispatch(createSuccess(\"\")),\n    autoHideDuration: 1000,\n    disableWindowBlurListener: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"filled\",\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 11\n    }\n  }, requestSuccessMessage))) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/girisyap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default CreateQuiz;","map":{"version":3,"sources":["/Users/samet/dev/cv/react-quiz-app-ui/src/pages/CreateQuiz.js"],"names":["React","useEffect","useState","makeStyles","Grid","Divider","Radio","Paper","TextField","Button","Snackbar","InputAdornment","IconButton","Alert","Pagination","DeleteIcon","useDispatch","useSelector","Redirect","produce","changeMenuIndex","changeTitle","createQuiz","createFailure","createSuccess","useStyles","theme","root","width","quizDescriptionWrapper","marginBottom","spacing","quizDescription","questionWrapper","question","choiceWrapper","choice","display","alignItems","divider","marginTop","buttons","justifyContent","button","pageButtonWrapper","CreateQuiz","classes","dispatch","isAuthenticated","state","auth","requestErrorMessage","quizzes","errorMessage","requestSuccessMessage","successMessage","questionDefault","description","descriptionErrorMessage","answers","index","answerIndex","quizDefault","questions","statusDefault","isQuizNameSubmitted","step","choiceNumber","page","quiz","setQuiz","status","setStatus","handleQuizDescriptionInput","e","target","value","handleAnswerInput","draft","submitQuizDescription","addChoice","push","slice","deleteChoice","indexOfChoice","findIndex","answer","splice","addQuestion","length","submitQuiz","forEach","deleteQuestion","formElement","pageToGo","map","endAdornment","preventDefault","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport produce from \"immer\";\nimport { changeMenuIndex, changeTitle } from \"../store/menu\";\nimport { createQuiz, createFailure, createSuccess } from \"../store/quiz\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  quizDescriptionWrapper: {\n    marginBottom: theme.spacing(2),\n  },\n  quizDescription: {\n    marginBottom: theme.spacing(1),\n  },\n  questionWrapper: {},\n  question: {\n    marginBottom: theme.spacing(2),\n  },\n  choiceWrapper: {},\n  choice: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(1),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  button: {\n    marginBottom: theme.spacing(1),\n  },\n  pageButtonWrapper: {\n    marginBottom: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst CreateQuiz = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const requestErrorMessage = useSelector(\n    (state) => state.quizzes.errorMessage\n  );\n\n  const requestSuccessMessage = useSelector(\n    (state) => state.quizzes.successMessage\n  );\n\n  const questionDefault = {\n    description: \"\",\n    descriptionErrorMessage: \"\",\n    answers: [\n      {\n        index: 0,\n        description: \"\",\n        errorMessage: \"\",\n      },\n    ],\n    answerIndex: 0,\n  };\n\n  const quizDefault = {\n    description: \"\",\n    questions: [questionDefault],\n  };\n\n  const statusDefault = {\n    isQuizNameSubmitted: false,\n    step: 0,\n    choiceNumber: 0,\n    page: 0,\n  };\n\n  const [quiz, setQuiz] = useState(quizDefault);\n  const [status, setStatus] = useState(statusDefault);\n\n  const handleQuizDescriptionInput = (e) => {\n    setQuiz({\n      ...quiz,\n      description: e.target.value,\n    });\n  };\n\n  const handleAnswerInput = (index, value) => {\n    setQuiz(\n      produce(quiz, (draft) => {\n        draft.questions[status.page].answers[index].description = value;\n        draft.questions[status.page].descriptionErrorMessage = \"\";\n      })\n    );\n  };\n\n  const submitQuizDescription = () => {\n    setStatus({\n      ...status,\n      isQuizNameSubmitted: true,\n      step: status.step + 1,\n    });\n  };\n\n  const addChoice = () => {\n    setQuiz(\n      produce(quiz, (draft) => {\n        draft.questions[status.page].answers.push({\n          index: draft.questions[status.page].answers.slice(-1)[0].index + 1,\n          description: \"\",\n          errorMessage: \"\",\n        });\n      })\n    );\n  };\n\n  const deleteChoice = (index) => {\n    setQuiz(\n      produce(quiz, (draft) => {\n        const indexOfChoice = draft.questions[status.page].answers.findIndex(\n          (answer) => {\n            return answer.index === index;\n          }\n        );\n        if (index === quiz.questions[status.page].answerIndex) {\n          draft.questions[status.page].answerIndex = indexOfChoice - 1;\n        }\n        draft.questions[status.page].answers.splice(indexOfChoice, 1);\n      })\n    );\n  };\n\n  const addQuestion = () => {\n    setQuiz(\n      produce(quiz, (draft) => {\n        draft.questions.push(questionDefault);\n      })\n    );\n    setStatus(\n      produce(status, (draft) => {\n        draft.page = quiz.questions.length;\n      })\n    );\n  };\n\n  const submitQuiz = () => {\n    dispatch(\n      createQuiz(\n        produce(quiz, (draft) => {\n          draft.questions.forEach((question) => {\n            delete question.descriptionErrorMessage;\n            question.answers.forEach((answer) => {\n              delete answer.errorMessage;\n            });\n          });\n        })\n      )\n    );\n  };\n\n  const deleteQuestion = (index) => {\n    index === 0\n      ? setStatus({ ...status, page: 0 })\n      : setStatus({ ...status, page: index - 1 });\n\n    setQuiz(\n      produce(quiz, (draft) => {\n        draft.questions.splice(index, 1);\n      })\n    );\n  };\n\n  useEffect(() => {\n    dispatch(changeMenuIndex(5));\n    dispatch(changeTitle(\"Soru Oluştur\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return isAuthenticated ? (\n    <Grid container>\n      <Grid item xs={12}>\n        {status.step === 0 ? (\n          <Paper elevation={0} className={classes.quizDescriptionWrapper}>\n            <TextField\n              disabled={status.isQuizNameSubmitted}\n              value={quiz.description}\n              onChange={handleQuizDescriptionInput}\n              label=\"Testine Bir Açıklama Belirle !\"\n              variant=\"outlined\"\n              fullWidth\n              className={classes.quizDescription}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.formElement}\n              fullWidth\n              disabled={quiz.description === \"\" || status.isQuizNameSubmitted}\n              onClick={submitQuizDescription}\n            >\n              {quiz.description === \"\"\n                ? \"Test Açıklamasını Giriniz\"\n                : \"İlerleyelim ->\"}\n            </Button>\n          </Paper>\n        ) : null}\n\n        {status.step === 1 ? (\n          <Paper elevation={0} className={classes.questionWrapper}>\n            <Grid item xs={12} className={classes.pageButtonWrapper}>\n              <Pagination\n                count={quiz.questions.length === 0 ? 1 : quiz.questions.length}\n                page={status.page + 1}\n                onChange={(e, pageToGo) => {\n                  setStatus(\n                    produce(status, (draft) => {\n                      draft.page = pageToGo - 1;\n                    })\n                  );\n                }}\n              />\n            </Grid>\n            <div className={classes.question}>\n              <TextField\n                error={\n                  quiz.questions[status.page].descriptionErrorMessage !== \"\"\n                }\n                helperText={quiz.questions[status.page].descriptionErrorMessage}\n                label=\"Soru\"\n                variant=\"filled\"\n                fullWidth\n                value={quiz.questions[status.page].description}\n                onChange={(e) =>\n                  setQuiz(\n                    produce(quiz, (draft) => {\n                      draft.questions[status.page].description = e.target.value;\n                      draft.questions[status.page].descriptionErrorMessage = \"\";\n                      draft.questions[status.page].answers.forEach(\n                        (answer) => (answer.errorMessage = \"\")\n                      );\n                    })\n                  )\n                }\n                multiline\n              />\n            </div>\n            <Grid item xs={12} className={classes.choiceWrapper}>\n              {quiz.questions[status.page].answers.map((answer, index) => (\n                <div className={classes.choice} key={index}>\n                  <Radio\n                    checked={\n                      answer.index === quiz.questions[status.page].answerIndex\n                    }\n                    onChange={() =>\n                      setQuiz(\n                        produce(quiz, (draft) => {\n                          draft.questions[status.page].answerIndex =\n                            answer.index;\n                        })\n                      )\n                    }\n                  />\n                  <TextField\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            disabled={answer.index === 0}\n                            aria-label=\"toggle password visibility\"\n                            onClick={() => deleteChoice(answer.index)}\n                            onMouseDown={(e) => e.preventDefault()}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                    variant=\"outlined\"\n                    error={answer.errorMessage !== \"\"}\n                    helperText={answer.errorMessage}\n                    value={answer.description}\n                    onChange={({ target: { value } }) =>\n                      handleAnswerInput(answer.index, value)\n                    }\n                    multiline\n                    fullWidth\n                  />\n                </div>\n              ))}\n            </Grid>\n            <Divider className={classes.divider} />\n            <div className={classes.buttons}>\n              <Grid item xs={12} md={8}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  onClick={addChoice}\n                  className={classes.button}\n                >\n                  Yeni Şık Ekle\n                </Button>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  onClick={addQuestion}\n                  className={classes.button}\n                >\n                  Başka Soru Ekle\n                </Button>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  onClick={() => deleteQuestion(status.page)}\n                  className={classes.button}\n                  disabled={quiz.questions.length < 2}\n                >\n                  Soruyu Sil\n                </Button>\n\n                <Button\n                  disabled={!quiz.questions.length > 0}\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  fullWidth\n                  onClick={submitQuiz}\n                  className={classes.button}\n                >\n                  Testi Bitir\n                </Button>\n              </Grid>\n            </div>\n          </Paper>\n        ) : null}\n      </Grid>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={requestErrorMessage !== \"\"}\n        onClose={() => dispatch(createFailure(\"\"))}\n        autoHideDuration={1000}\n        disableWindowBlurListener\n      >\n        <Alert variant=\"filled\" severity=\"error\">\n          {requestErrorMessage}\n        </Alert>\n      </Snackbar>\n      {\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={requestSuccessMessage !== \"\"}\n          onClose={() => dispatch(createSuccess(\"\"))}\n          autoHideDuration={1000}\n          disableWindowBlurListener\n        >\n          <Alert variant=\"filled\" severity=\"success\">\n            {requestSuccessMessage}\n          </Alert>\n        </Snackbar>\n      }\n    </Grid>\n  ) : (\n    <Redirect to=\"/girisyap\" />\n  );\n};\n\nexport default CreateQuiz;\n"]},"metadata":{},"sourceType":"module"}