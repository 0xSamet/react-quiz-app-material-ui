{"ast":null,"code":"import axios from \"axios\";\nconst INITIAL_STATE = {\n  loginError: \"\",\n  isFetching: false,\n  isAuthenticated: false,\n  token: \"\",\n  user: {}\n};\nconst LOGIN_START = \"LOGIN_START\";\nconst LOGIN_FAILURE = \"LOGIN_FAILURE\";\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nconst LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const loginStart = () => ({\n  type: LOGIN_START\n});\nexport const loginFailure = message => ({\n  type: LOGIN_FAILURE,\n  payload: {\n    message\n  }\n});\nexport const loginSuccess = (token, user) => ({\n  type: LOGIN_SUCCESS,\n  payload: {\n    token,\n    user\n  }\n});\nexport const logoutSuccess = () => ({\n  type: LOGOUT_SUCCESS\n});\nexport const login = user => async dispatch => {\n  try {\n    dispatch(loginStart());\n    const result = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/oturum/girisyap`, user);\n\n    if (result.status === 202) {\n      if (localStorage.getItem(\"token\")) {\n        localStorage.removeItem(\"token\");\n      }\n\n      localStorage.setItem(\"token\", result.data.token);\n      dispatch(loginSuccess(result.data.token, user));\n      return;\n    }\n\n    throw new Error(result.data.message);\n  } catch (err) {\n    dispatch(loginFailure(err.message));\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch(logoutSuccess());\n\n  if (localStorage.getItem(\"token\")) {\n    localStorage.removeItem(\"token\");\n  }\n};\nexport const authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case LOGIN_START:\n      return { ...state,\n        isFetching: true,\n        isAuthenticated: false,\n        user: {}\n      };\n\n    case LOGIN_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        isAuthenticated: true,\n        token: action.payload.token,\n        user: action.payload.user\n      };\n\n    case LOGIN_FAILURE:\n      return { ...state,\n        isFetching: false,\n        isAuthenticated: false,\n        loginError: action.payload.message,\n        user: {}\n      };\n\n    case LOGOUT_SUCCESS:\n      return { ...state,\n        isAuthenticated: false,\n        token: \"\",\n        user: {}\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/samet/dev/cv/react-quiz-app-ui/src/store/auth.js"],"names":["axios","INITIAL_STATE","loginError","isFetching","isAuthenticated","token","user","LOGIN_START","LOGIN_FAILURE","LOGIN_SUCCESS","LOGOUT_SUCCESS","loginStart","type","loginFailure","message","payload","loginSuccess","logoutSuccess","login","dispatch","result","post","process","env","REACT_APP_API_BASE_URL","status","localStorage","getItem","removeItem","setItem","data","Error","err","logout","authReducer","state","action"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst INITIAL_STATE = {\n  loginError: \"\",\n  isFetching: false,\n  isAuthenticated: false,\n  token: \"\",\n  user: {},\n};\n\nconst LOGIN_START = \"LOGIN_START\";\nconst LOGIN_FAILURE = \"LOGIN_FAILURE\";\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nconst LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\n\nexport const loginStart = () => ({\n  type: LOGIN_START,\n});\n\nexport const loginFailure = (message) => ({\n  type: LOGIN_FAILURE,\n  payload: {\n    message,\n  },\n});\n\nexport const loginSuccess = (token, user) => ({\n  type: LOGIN_SUCCESS,\n  payload: {\n    token,\n    user,\n  },\n});\n\nexport const logoutSuccess = () => ({\n  type: LOGOUT_SUCCESS,\n});\n\nexport const login = (user) => async (dispatch) => {\n  try {\n    dispatch(loginStart());\n    const result = await axios.post(\n      `${process.env.REACT_APP_API_BASE_URL}/oturum/girisyap`,\n      user\n    );\n    if (result.status === 202) {\n      if (localStorage.getItem(\"token\")) {\n        localStorage.removeItem(\"token\");\n      }\n      localStorage.setItem(\"token\", result.data.token);\n      dispatch(loginSuccess(result.data.token, user));\n      return;\n    }\n    throw new Error(result.data.message);\n  } catch (err) {\n    dispatch(loginFailure(err.message));\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  dispatch(logoutSuccess());\n  if (localStorage.getItem(\"token\")) {\n    localStorage.removeItem(\"token\");\n  }\n};\n\nexport const authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case LOGIN_START:\n      return { ...state, isFetching: true, isAuthenticated: false, user: {} };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        isAuthenticated: true,\n        token: action.payload.token,\n        user: action.payload.user,\n      };\n    case LOGIN_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        isAuthenticated: false,\n        loginError: action.payload.message,\n        user: {},\n      };\n    case LOGOUT_SUCCESS:\n      return { ...state, isAuthenticated: false, token: \"\", user: {} };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}