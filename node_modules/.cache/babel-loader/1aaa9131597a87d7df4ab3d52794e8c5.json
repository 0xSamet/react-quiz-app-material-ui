{"ast":null,"code":"var _jsxFileName = \"/Users/samet/dev/cv/react-quiz-app-ui/src/pages/Quiz.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useStore, useDispatch } from \"react-redux\";\nimport { changeTitle, changeMenuIndex } from \"../store/menu\";\nimport AnswerListItem from \"../components/AnswerListItem\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  formElement: {\n    marginTop: 10\n  },\n  questionWrapper: {\n    backgroundColor: theme.palette.primary.main\n  },\n  answersWrapper: {\n    marginTop: theme.spacing(1),\n    marginBottom: 16\n  },\n  answerSuccess: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n    cursor: \"pointer\",\n    backgroundColor: \"#357a38\"\n  },\n  answerError: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n    cursor: \"pointer\",\n    backgroundColor: \"#ab003c\"\n  },\n  answer: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n    cursor: \"pointer\"\n  },\n  question: {\n    marginBottom: 16,\n    textAlign: \"justify\"\n  },\n  progress: {\n    marginBottom: 16,\n    textAlign: \"center\"\n  }\n}));\n\nconst QuizPage = () => {\n  const classes = useStyles();\n  const {\n    testId\n  } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const store = useStore();\n  const [quiz, setQuiz] = useState({\n    step: 0,\n    questions: [],\n    isAnswered: false,\n    answeredWith: null,\n    isDone: false,\n    score: 0\n  });\n  useEffect(() => {\n    dispatch(changeTitle(\"Test Sayfası\"));\n    dispatch(changeMenuIndex(-1));\n    const currentQuiz = store.getState().quizzes.quizzes.find(quiz => {\n      return quiz._id === testId;\n    });\n\n    if (!currentQuiz) {\n      axios.get(`${process.env.REACT_APP_API_BASE_URL}/testler/${testId}`).then(result => {\n        if (result) {\n          setQuiz({ ...quiz,\n            ...result.data[0]\n          });\n          return;\n        }\n\n        return history.push(\"/testler\");\n      });\n    }\n\n    setQuiz({ ...quiz,\n      ...currentQuiz\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const makeAnswer = index => {\n    if (index === quiz.questions[quiz.step].answerIndex) {\n      setQuiz({ ...quiz,\n        isAnswered: true,\n        answeredWith: index,\n        score: quiz.score + 1\n      });\n    } else {\n      setQuiz({ ...quiz,\n        isAnswered: true,\n        answeredWith: index\n      });\n    }\n  };\n\n  const nextQuestion = () => {\n    if (quiz.step < quiz.questions.length - 1) {\n      setQuiz({ ...quiz,\n        step: quiz.step + 1,\n        isAnswered: false\n      });\n    } else {\n      setQuiz({ ...quiz,\n        isDone: true\n      });\n      return;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    s: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, quiz.isDone ? /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 0,\n    square: true,\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"Skorunuz: \", quiz.score, \" / \", quiz.questions.length))) : null, quiz.questions.length > 0 && !quiz.isDone ? /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 0,\n    square: true,\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, quiz.step + 1, \" / \", quiz.questions.length)), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 0,\n    square: true,\n    className: classes.question,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, quiz.questions[quiz.step].description)), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: classes.answersWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, quiz.questions[quiz.step].answers.map((answer, key) => /*#__PURE__*/React.createElement(AnswerListItem, {\n    answer: answer.description,\n    className: quiz.isAnswered ? answer.index === quiz.questions[quiz.step].answerIndex ? classes.answerSuccess : quiz.answeredWith === quiz.questions[quiz.step].answerIndex ? classes.answer : classes.answerError : classes.answer,\n    onClick: () => !quiz.isAnswered ? makeAnswer(answer.index) : null,\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }))), quiz.isAnswered ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: classes.answersWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, quiz.step === quiz.questions.length - 1 ? \"Testi Bitir\" : \"Sonraki Soruya Geç\"))) : null) : null));\n};\n\nexport default QuizPage;","map":{"version":3,"sources":["/Users/samet/dev/cv/react-quiz-app-ui/src/pages/Quiz.js"],"names":["React","useState","useEffect","makeStyles","Typography","Grid","Box","Divider","Paper","Button","useParams","useHistory","useStore","useDispatch","changeTitle","changeMenuIndex","AnswerListItem","axios","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","formElement","marginTop","questionWrapper","backgroundColor","palette","primary","main","answersWrapper","marginBottom","answerSuccess","padding","cursor","answerError","answer","question","textAlign","progress","QuizPage","classes","testId","history","dispatch","store","quiz","setQuiz","step","questions","isAnswered","answeredWith","isDone","score","currentQuiz","getState","quizzes","find","_id","get","process","env","REACT_APP_API_BASE_URL","then","result","data","push","makeAnswer","index","answerIndex","nextQuestion","length","description","answers","map","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useStore, useDispatch } from \"react-redux\";\nimport { changeTitle, changeMenuIndex } from \"../store/menu\";\nimport AnswerListItem from \"../components/AnswerListItem\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  formElement: {\n    marginTop: 10,\n  },\n  questionWrapper: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  answersWrapper: {\n    marginTop: theme.spacing(1),\n    marginBottom: 16,\n  },\n  answerSuccess: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n    cursor: \"pointer\",\n    backgroundColor: \"#357a38\",\n  },\n  answerError: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n    cursor: \"pointer\",\n    backgroundColor: \"#ab003c\",\n  },\n  answer: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n    cursor: \"pointer\",\n  },\n  question: {\n    marginBottom: 16,\n    textAlign: \"justify\",\n  },\n  progress: {\n    marginBottom: 16,\n    textAlign: \"center\",\n  },\n}));\n\nconst QuizPage = () => {\n  const classes = useStyles();\n  const { testId } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const store = useStore();\n  const [quiz, setQuiz] = useState({\n    step: 0,\n    questions: [],\n    isAnswered: false,\n    answeredWith: null,\n    isDone: false,\n    score: 0,\n  });\n\n  useEffect(() => {\n    dispatch(changeTitle(\"Test Sayfası\"));\n    dispatch(changeMenuIndex(-1));\n    const currentQuiz = store.getState().quizzes.quizzes.find((quiz) => {\n      return quiz._id === testId;\n    });\n\n    if (!currentQuiz) {\n      axios\n        .get(`${process.env.REACT_APP_API_BASE_URL}/testler/${testId}`)\n        .then((result) => {\n          if (result) {\n            setQuiz({ ...quiz, ...result.data[0] });\n            return;\n          }\n          return history.push(\"/testler\");\n        });\n    }\n\n    setQuiz({ ...quiz, ...currentQuiz });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const makeAnswer = (index) => {\n    if (index === quiz.questions[quiz.step].answerIndex) {\n      setQuiz({\n        ...quiz,\n        isAnswered: true,\n        answeredWith: index,\n        score: quiz.score + 1,\n      });\n    } else {\n      setQuiz({ ...quiz, isAnswered: true, answeredWith: index });\n    }\n  };\n\n  const nextQuestion = () => {\n    if (quiz.step < quiz.questions.length - 1) {\n      setQuiz({ ...quiz, step: quiz.step + 1, isAnswered: false });\n    } else {\n      setQuiz({ ...quiz, isDone: true });\n      return;\n    }\n  };\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12} s={12} md={8}>\n        {quiz.isDone ? (\n          <Box>\n            <Paper elevation={0} square className={classes.progress}>\n              <Typography variant=\"h5\">\n                Skorunuz: {quiz.score} / {quiz.questions.length}\n              </Typography>\n            </Paper>\n          </Box>\n        ) : null}\n        {quiz.questions.length > 0 && !quiz.isDone ? (\n          <Box>\n            <Paper elevation={0} square className={classes.progress}>\n              <Typography variant=\"h5\">\n                {quiz.step + 1} / {quiz.questions.length}\n              </Typography>\n            </Paper>\n            <Paper elevation={0} square className={classes.question}>\n              <Typography variant=\"h5\">\n                {quiz.questions[quiz.step].description}\n              </Typography>\n            </Paper>\n            <Divider />\n            <Box className={classes.answersWrapper}>\n              {quiz.questions[quiz.step].answers.map((answer, key) => (\n                <AnswerListItem\n                  answer={answer.description}\n                  className={\n                    quiz.isAnswered\n                      ? answer.index === quiz.questions[quiz.step].answerIndex\n                        ? classes.answerSuccess\n                        : quiz.answeredWith ===\n                          quiz.questions[quiz.step].answerIndex\n                        ? classes.answer\n                        : classes.answerError\n                      : classes.answer\n                  }\n                  onClick={() =>\n                    !quiz.isAnswered ? makeAnswer(answer.index) : null\n                  }\n                  key={key}\n                />\n              ))}\n            </Box>\n            {quiz.isAnswered ? (\n              <>\n                <Divider />\n                <Box className={classes.answersWrapper}>\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    onClick={nextQuestion}\n                  >\n                    {quiz.step === quiz.questions.length - 1\n                      ? \"Testi Bitir\"\n                      : \"Sonraki Soruya Geç\"}\n                  </Button>\n                </Box>\n              </>\n            ) : null}\n          </Box>\n        ) : null}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default QuizPage;\n"]},"metadata":{},"sourceType":"module"}